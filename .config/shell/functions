#!/bin/sh

# cd up [1-9] times
.{1..9} (){ local d=.; repeat ${0:1} d+=/..; cd $d;}

config() {
	local git_cmd=(git -C $HOME --git-dir=$HOME/repos/dotfiles.git --work-tree=$HOME)

    if [[ $# -eq 0 ]]; then
        "${git_cmd[@]}" status --short
    else
        "${git_cmd[@]}" "$@"
    fi
}

# base64 decode wihout trailing garbage
b64 (){
	[ $# != 1 ] && echo "b64: decode a base64 string\nUsage: b64 <base64 string>" && return ||
		echo $(echo "$1" | base64 -w 0 -d)
}

# Extract archive files
ex (){
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)   tar xjf $1   ;;
			*.tar.gz)    tar xzf $1   ;;
			*.bz2)       bunzip2 $1   ;;
			*.rar)       unrar x $1   ;;
			*.gz)        gunzip $1    ;;
			*.tar)       tar xf $1    ;;
			*.tbz2)      tar xjf $1   ;;
			*.tgz)       tar xzf $1   ;;
			*.zip)       unzip $1     ;;
			*.Z)         uncompress $1;;
			*.7z)        7z x $1      ;;
			*.deb)       ar x $1      ;;
			*.tar.xz)    tar xf $1    ;;
			*.tar.zst)   tar xf $1    ;;
			*)           echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

flacsplit(){
	[ $# != 2 ] && echo "flacsplit: convert single-file flac albums into tagged 320kpbs ogg tracks\nUsage: flacsplit /path/to/cue /path/to/flac" && return ||
	if [ -e "$1" -a -e "$2" ] && expr "$1" : '.*\.cue$' > /dev/null && expr "$2" : '.*\.flac$' > /dev/null || expr "$2" : '.*\.ape$' > /dev/null || expr "$2" : '.*\.wav$' > /dev/null; then
		tmpdir=$(mktemp -d /tmp/flacsplit.XXXXXX.d)
		echo "Splitting FLAC file into tracks..."
		shnsplit -t "%n %t" -d "$tmpdir" -o "cust ext=mp3 ffmpeg -i - -ab 320k %f" -f "$1" "$2"
		echo "Tagging tracks..."
		cuetag.sh "$1" "$tmpdir"/*
		echo -n "\nDone! Importing to beets music library..." && \
		beet import "$tmpdir"
		# echo "\nCleaning up..." && rm -r "$tmpdir"
	else
	  echo "Invalid arguments. Use .cue and .flac files as arguments, and make sure the path is correct."
	fi
}

# run gitsum on $HOME/repos, and $HOMe/.local/src if it exists
gitall(){
	if [ -d "$HOME/.local/src" ]; then
		gitsum $HOME/.local/src && echo " " && gitsum $HOME/repos
	else
		gitsum $HOME/repos
	fi
}

# Set xkeyboard options, remap caps-lock, and repeat rate
kbd() {
	# setxkbmap -model pc104 -layout us -variant altgr-intl -option caps:escape
	[ -r $XDG_CONFIG_HOME/X11/Xmodmap ] && xmodmap $XDG_CONFIG_HOME/X11/Xmodmap
	xset r rate 250 100
	xinput set-prop "ARESON ProFit Ergo Vertical Wired Trackball" "libinput Accel Profile Enabled" 0, 1
}

# convert the specified files to mp3 320kbps
mp3conv(){
	[ $# != 1 ] && echo "mp3conv: find files in a directory and covert them to 320kbps mp3\nUsage: tomp3 [extension], e.g. flac, wav, etc." && return ||
	tmpdir=$(mktemp -d /tmp/mp3conv.XXXXXX.d)
	find -name "*.$1" -exec sh -c 'ffmpeg -i "{}" -ab 320k "'$tmpdir'/${0/.'$1'}.mp3"' {} \; || \
	echo -n "\nDone! Importing to beets music library..." && \
	beet import "$tmpdir" && \
	echo "\nCleaning up..." && rm -r "$tmpdir"
}

yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

se() { fd -tf . ~/.local/bin | fzf --bind 'enter:become($EDITOR {})' ;} # edit a script from .local/bin

ce() { fd -tf -H -d 2 . ~/.config | fzf --bind 'enter:become($EDITOR {})' ;} # edit a config file

colours() {
	for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done
}
