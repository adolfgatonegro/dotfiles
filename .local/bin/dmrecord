#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 audio`: Record only audio
# `$0 desktop`: Record only screen
# `$0 slice`: Record only selected window or screen area
# `$0 screencast`: Record both audio and screen
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

recordingsdir="$HOME/videos"
[ ! -d ${recordingsdir} ] && mkdir -p $recordingsdir

getdim() { xrandr | grep -oP '(?<=current ).*(?=,)' | tr -d ' ' ;}

updateicon() {
	echo "$1" > /tmp/recordingicon
	pkill -RTMIN+18 dwmblocks
}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	pkill -RTMIN+18 dwmblocks
}

screencast() {
	askaudiosource
	sleep 1
	ffmpeg \
		-hide_banner \
		-y \
		-f x11grab \
		-framerate 60 \
		-i $DISPLAY \
		-f pulse \
		-i $audiosource \
		-c:v libx264 \
		-preset ultrafast \
		-c:a aac \
		-vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" \
		-pix_fmt yuv420p \
	 	"$recordingsdir/screencast-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^雷   ^C7^"
}

desktop() {
	# ffmpeg \
	# 	-hide_banner \
	# 	-f x11grab \
	# 	-framerate 30 \
	# 	-i $DISPLAY \
	# 	-c:v h264_nvenc \
	# 	-g 24 \
	# 	-b:v 2M \
	# 	-preset slow \
	# 	-vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" \
	# 	-pix_fmt yuv420p \
	# 	"$recordingsdir/desktop-$(date '+%y%m%d-%H%M-%S').mp4" &
	ffmpeg \
		-hide_banner \
		-f x11grab \
		-framerate 30 \
		-i $DISPLAY \
		-preset slow \
		-vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" \
		-pix_fmt yuv420p \
		"$recordingsdir/desktop-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^雷  ^C7^"
}

webcamhidef() {
	ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 1920x1080 \
	"$recordingsdir/webcam-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^雷   HD^C7^"
}

webcam() {
	ffmpeg \
	-f v4l2 \
	-i /dev/video0 \
	-video_size 640x480 \
	"$recordingsdir/webcam-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^雷   SD^C7^"
}

audio() {
	askaudiosource

	ffmpeg \
	-f pulse -i $audiosource \
	-c:a flac \
	"$recordingsdir/audio-$(date '+%y%m%d-%H%M-%S').flac" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^雷  ^C7^"
}

askrecording() {
	choice=$(printf "audio\\ndesktop\\nslice\\nscreencast\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
	case "$choice" in
		audio) audio;;
		desktop) desktop;;
		slice) slice;;
		screencast) screencast;;
		webcam) webcam;;
		"webcam (hi-def)") webcamhidef;;
	esac
}

askaudiosource() {
	choice=$(pactl list short sources | awk '{ print $2; }' | dmenu -i -l 10 -p "Select audio source:")
	audiosource="$choice"
}

asktoend() {
	response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
	[ "$response" = "Yes" ] &&  killrecording
}

slice() {
	slop -f "%x %y %w %h" > /tmp/slop
	read -r X Y W H < /tmp/slop
	rm /tmp/slop

	ffmpeg \
	-f x11grab \
	-framerate 30 \
	-video_size "$W"x"$H" \
	-i :0.0+"$X,$Y" \
	-c:v libx264 -qp 0 -r 30 \
	"$recordingsdir/slice-$(date '+%y%m%d-%H%M-%S').mp4" &
	echo $! > /tmp/recordingpid
	updateicon "^C1^雷 类 ^C7^"
}

case "$1" in
	audio) audio;;
	desktop) desktop;;
	slice) slice;;
	screencast) screencast;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
